#!/bin/bash
#
# Copyright 2014,2015,2016,2017,2018 Security Onion Solutions, LLC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. /usr/sbin/so-elastic-common

. /etc/nsm/securityonion.conf

echo

if [ "${KIBANA_ENABLED}" = "no" ]; then

	header "Kibana is disabled, skipping dashboard config"

else

	header "Configuring Kibana dashboards"

	# Check to see if Kibana is available
	max_wait=240
	until curl -s -XGET http://localhost:5601/ > /dev/null ; do
		wait_step=$(( ${wait_step} + 1 ))
		if [ ${wait_step} -gt ${max_wait} ]; then
			echo "ERROR: Kibana not available for more than ${max_wait} seconds."
			exit 5
		fi
		sleep 1s;
	done

	# Give Kibana just a few more seconds to fully initialize
	sleep 5s

	# Load dashboards, visualizations, index pattern(s), etc.
	for i in /opt/elastic/src/kibana/dashboards/*.json; do
		curl -XPOST localhost:5601/api/kibana/dashboards/import?force=true -H 'kbn-xsrf:true' -H 'Content-type:application/json' -d @$i >> /var/log/nsm/so-elastic-configure-kibana-dashboards.log 2>&1 &
		echo -n "."
	done

	# Give Kibana a few more seconds to fully digest all of those dashboards
	sleep 5s

	echo

fi
